@using GST.Web.ViewModels.PagesViewModel
@using System.Text
@model AdministrationPageViewModel

<a asp-controller="AdministrationArea" asp-action="Index">&laquo; Back</a>
<h2>Static Page Editor</h2>

@section Scripts {
    <script>
        tinymce.init({
            selector: "textarea",
            plugins: "link image code",
            relative_urls: false,
            remove_script_host: false
        });
    </script>
}

<div class="container">
    <ul class="nav nav-tabs">
        @foreach (var name in Model.PageNames)
        {
            if (Model.Name == name)
            {
                <li class="active"><a asp-action="EditStaticPages" asp-route-pageName="@name" asp-controller="AdministrationArea">@name</a></li>
            }
            else
            {
                <li><a asp-action="EditStaticPages" asp-route-pageName="@name" asp-controller="AdministrationArea">@name</a></li>
            }
        }
        <li><a asp-action="NewPage"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></a></li>
    </ul>
    <br />

    <div class="container">
        <form asp-controller="AdministrationArea" asp-action="EditStaticPages" method="post">
            <div class="container">
                <button type="submit" class="btn-primary btn-lg">Save</button>
                <a href="DeletePage?pageId=@Model.Id" class="pull-right">Delete</a>
                <br /><br />
                @Html.LabelFor(m => m.Name)
                @Html.EditorFor(m => m.Name)
            </div>
            <hr />
            <div class="container">
                <textarea name="Content" rows="20" cols="120">@Model.Content</textarea>
                <input type="hidden" name="OldName" value="@Model.Name" />
            </div>
            @{
                StringBuilder sb = new StringBuilder();
                sb.Append(string.Format("Created on {0}, ", Model.CreatedOn.ToString()));
                if (Model.ModifiedOn != null)
                {
                    sb.Append(string.Format("modified on {0} ", Model.ModifiedOn.ToString()));
                }
                sb.Append(string.Format("posted by {0}", "[user]"));

                string finalMessage = sb.ToString();
            }
            <br />
            <em><strong>@finalMessage</strong></em> 
        </form>
    </div>
</div>